[gd_resource type="ShaderMaterial" load_steps=3 format=2]

[ext_resource path="res://Assets/Sprites/Extra/Perlin.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform sampler2D dissolve_texture : hint_albedo;
uniform vec4 border_col : hint_color;
uniform float dissolve_texture_scale : hint_range(0.5, 10);
uniform float border_threshold : hint_range(0,1);
uniform float offsetx : hint_range(0,1);
uniform float offsety : hint_range(0,1);
uniform float dissolve_value : hint_range(0,1);

void fragment(){
    //vec2 offset = vec2(offsetx, offsety);
	vec2 uv2 = vec2(fract((UV.x*dissolve_texture_scale)+offsetx), fract((UV.y*dissolve_texture_scale)+offsety));
	vec4 main_texture = texture(TEXTURE, uv2);
    vec4 noise_texture = texture(dissolve_texture, uv2);
    
	float bd = float(noise_texture.r - dissolve_value)/float(1.0-dissolve_value);
	//bd = clamp(bd, float(0), float(1));
	//float a = main_texture.a;
	/*if(bd < (border_threshold)){
		 main_texture = border_col;
	}*/
	main_texture.a *= bd;
	COLOR = texture(SCREEN_TEXTURE, SCREEN_UV) + main_texture;
	
	
    
}"

[resource]
shader = SubResource( 1 )
shader_param/border_col = Color( 0.513726, 0.737255, 0.929412, 1 )
shader_param/dissolve_texture_scale = 3.0
shader_param/border_threshold = 0.0
shader_param/offsetx = 0.494
shader_param/offsety = 0.126
shader_param/dissolve_value = 0.0
shader_param/dissolve_texture = ExtResource( 1 )
